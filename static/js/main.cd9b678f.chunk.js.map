{"version":3,"sources":["fbase.js","routes/Auth.js","routes/Profile.js","routes/Home.js","components/Navigation.js","routes/EditProfile.js","routes/UploadFile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","firebaseInstance","authService","auth","Auth","useState","email","setEmail","passWord","setPassWord","isNewAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","signInWithEmailAndPassword","data","createUserWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Profile","signOut","Home","Navigation","to","EditProfile","UploadFile","fileUpload","setFileUpload","url","setUrl","files","ref","put","on","snapshot","child","getDownloadURL","then","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggin","useEffect","onAuthStateChanged","user","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd9b678f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBipiTv1lThCOYOoscLLMDRR6Cnz8RqmzA\",\r\n  authDomain: \"nwiter-cd17d.firebaseapp.com\",\r\n  projectId: \"nwiter-cd17d\",\r\n  storageBucket: \"nwiter-cd17d.appspot.com\",\r\n  messagingSenderId: \"257800727565\",\r\n  appId: \"1:257800727565:web:9b231f4d84debda88eb944\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\nconst firebaseInstance = firebase;\r\nconst authService = firebase.auth();\r\nexport { storage, authService, firebaseInstance };\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [passWord, setPassWord] = useState(\"\");\r\n  const [isNewAccount, setNewAccount] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassWord(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (isNewAccount) {\r\n        data = await authService.signInWithEmailAndPassword(email, passWord);\r\n      } else {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          passWord\r\n        );\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          required\r\n          value={passWord}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={isNewAccount === false ? \"Create new account\" : \"Log In\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {isNewAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <button name=\"google\" onClick={onSocialClick}>\r\n        Continue with Google\r\n      </button>\r\n      <button name=\"github\" onClick={onSocialClick}>\r\n        Continue with Github\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst Profile = () => {\r\n  <Redirect strict from=\"*\" to=\"/\" />;\r\n  // <Redirect from=\"*\" to=\"/\" />;\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    // history.push(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst Home = () => (\r\n  <>\r\n    {/* <Switch>\r\n      <Route path=\"/home\">\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n    </Switch> */}\r\n    <span>Home</span>\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n","import react from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">Profile</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/editprofile\">Edit Profile</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/uploadfile\">Upload File</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nfunction EditProfile() {\r\n  return <span>EditProfile</span>;\r\n}\r\nexport default EditProfile;\r\n","import React, { useState } from \"react\";\r\nimport { authService, storage } from \"fbase\";\r\nconst UploadFile = () => {\r\n  const [fileUpload, setFileUpload] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    if (event.target.files[0]) {\r\n      setFileUpload(event.target.files[0]);\r\n    }\r\n  };\r\n  const handleUpload = () => {\r\n    const uploadTask = storage.ref(`WP/${fileUpload.name}`).put(fileUpload);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      (snapshot) => {},\r\n      (error) => {\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref(\"WP\")\r\n          .child(fileUpload.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setUrl(url);\r\n          });\r\n      }\r\n    );\r\n    console.log(\"file\", fileUpload);\r\n  };\r\n  return (\r\n    <>\r\n      <input type=\"file\" onChange={handleChange} />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      <b>{url}</b>\r\n    </>\r\n  );\r\n};\r\nexport default UploadFile;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\nimport EditProfile from \"routes/EditProfile\";\r\nimport UploadFile from \"routes/UploadFile\";\r\n\r\nconst AppRouter = ({ isLoggedIn }) => {\r\n  console.log(isLoggedIn);\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation />}\r\n      <Switch>\r\n        {isLoggedIn === true ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/editprofile\">\r\n              <EditProfile />\r\n            </Route>\r\n            <Route exact path=\"/uploadfile\">\r\n              <UploadFile />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggin] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggin(true);\n      } else {\n        setIsLoggin(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  return (\n    <>\n      {init ? <AppRouter isLoggedIn={isLoggedIn} /> : \"Initializing....\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}